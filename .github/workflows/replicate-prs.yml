name: Replicar PR para Produção

# INSTRUÇÕES DE CONFIGURAÇÃO:
# 1. Criar um GitHub App em https://github.com/settings/apps/new com:
#    - Nome: PR Replicator (ou outro nome descritivo)
#    - Página inicial: URL do seu repositório
#    - Permissões:
#      * Repository permissions > Contents: Read & write
#      * Repository permissions > Pull requests: Read & write
#      * Repository permissions > Metadata: Read-only
#    - Onde pode ser instalado: Apenas em sua conta
# 2. Após criar, anote o App ID
# 3. Gere uma chave privada (na página do App, em "Private keys")
# 4. Instale o App no repositório de destino (brunolopesdev/nuxt-crud)
# 5. No repositório de origem (nuxt-crud-qa), adicione dois secrets em Settings > Secrets:
#    - APP_ID: O ID do GitHub App criado
#    - APP_PRIVATE_KEY: O conteúdo completo do arquivo .pem baixado

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: read

jobs:
  replicar-para-prod:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório de QA
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Pega o histórico completo
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Gerar token de acesso do GitHub App
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: brunolopesdev
          repositories: nuxt-crud

      - name: Configurar Git e fazer push para produção
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git config --global user.name "GitHub App"
          git config --global user.email "github-app@example.com"

          # Adicionar repositório de produção como remoto
          git remote add prod https://x-access-token:${GH_TOKEN}@github.com/brunolopesdev/nuxt-crud.git

          # Fazer push da branch para produção
          git push prod ${{ github.event.pull_request.head.ref }}:${{ github.event.pull_request.head.ref }}

      - name: Criar Pull Request no repositório de produção
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          # Instalar GitHub CLI
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

          # Criar PR usando GitHub CLI
          gh pr create \
            --repo brunolopesdev/nuxt-crud \
            --head ${{ github.event.pull_request.head.ref }} \
            --base master \
            --title "${{ github.event.pull_request.title }}" \
            --body "**Replicação automática da PR aprovada em QA**

          PR original: ${{ github.event.pull_request.html_url }}
          Aprovada por: ${{ github.event.review.user.login }}
          Data de aprovação: ${{ github.event.review.submitted_at }}

          ${{ github.event.pull_request.body }}"
