name: Replicar PR para Produção

on:
  pull_request_review:
    types: [submitted]

jobs:
  replicar-para-prod:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout da branch da PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Instalar GH CLI
        run: |
          sudo apt update
          sudo apt install gh -y

      - name: Autenticar no GitHub CLI
        run: |
          echo "${{ secrets.API_TOKEN_GITHUB }}" | gh auth login --with-token

      - name: Criar a branch no repositório de produção via API
        env:
          REPO: brunolopesdev/nuxt-crud
          BRANCH: ${{ github.event.pull_request.head.ref }}
          BASE: master
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
        run: |
          # Verifica se a branch já existe
          if gh api repos/$REPO/git/refs/heads/$BRANCH; then
            echo "Branch $BRANCH já existe no repositório de produção. Ignorando criação."
          else
            echo "Criando a branch $BRANCH no repositório de produção..."
            # Pega o SHA da branch base (master) no repositório de produção
            BASE_SHA=$(gh api repos/$REPO/git/ref/heads/$BASE --jq .object.sha)
            # Cria a nova branch no repo de produção
            gh api repos/$REPO/git/refs -f ref="refs/heads/$BRANCH" -f sha="$BASE_SHA"
          fi

      - name: Criar a Pull Request no repositório de produção
        env:
          REPO: brunolopesdev/nuxt-crud
          BRANCH: ${{ github.event.pull_request.head.ref }}
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
        run: |
          echo "Criando PR de $BRANCH para master no repositório de produção..."
          gh pr create --repo $REPO \
            --head $BRANCH \
            --base master \
            --title "${{ github.event.pull_request.title }}" \
            --body "**Replicação automática da PR aprovada em QA**\n\nPR original: ${{ github.event.pull_request.html_url }}\nAprovada por: ${{ github.event.review.user.login }}\nData de aprovação: ${{ github.event.review.submitted_at }}\n\n${{ github.event.pull_request.body }}" \
            --reviewer "tech-lead,product-owner" || echo "PR já existente ou erro leve, ignorado."
